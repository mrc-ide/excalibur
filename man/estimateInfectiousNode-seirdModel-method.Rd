% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seird_Methods.R
\name{estimateInfectiousNode,seirdModel-method}
\alias{estimateInfectiousNode,seirdModel-method}
\title{An S4 method to estimate current state of S, E and I for an SIRD when provided
with a total count of deaths so far}
\usage{
\S4method{estimateInfectiousNode}{seirdModel}(epiModel, deaths)
}
\arguments{
\item{epiModel}{The epidemic model of class SEIRD to have the current state of
S and I estimated.}

\item{deaths}{The total death count for this model, up to each of the
changeTimes so far.}
}
\value{
An object of class seirdModel with the values for S, E and I updated
for the current state.
}
\description{
Please note that this method does not guarantee that this state would be
generated by the model, given its initial conditions.
This method also makes the assumption that the third derivative of D + R with
respect to time is 0.
Due to rounding etc, when the value of I would be very small the esimated I
will be quite different from the one generated when the model is simulated.
At the present time-varying Betas are only partially adjusted for.
These values are then stored in the list in the slot "currentState".
}
\examples{
#create example model
model <- setSEIRD(N = 100, Beta = 1, Lambda = 1, Gamma = 1/5, ProbOfDeath = 0.5, I0 = 1)
#Set the deaths (only one entry is required)
deaths <- 20
#Set the time, makes no difference to this calculation, only used for simulate
time <- 10
#call this + the D+R node function
model <- calculateCurrentState(model, time, deaths)

#check S and I
currentState(model)

#model with time-varying Beta
model <- setSEIRD(N = 100, Beta = c(2,1/2), Lambda = 1, Gamma = 1/5, ProbOfDeath = 0.5,
 I0 = 1, changeTimes = 5)
#Set the deaths, two entries are required now
deaths <- c(20,30)
time <- 10
#the model assumes that the first number 20 is the number of deaths up to the
#specified change time 5, and that the last number 30 is the number of deaths
#up to the current time (10).
#if the current state is not past 5, then we would set deaths <- c(20,20)

#call this + the D+R node function
model <- calculateCurrentState(model, t=time, deaths=deaths)

#check S and I
currentState(model)

}
